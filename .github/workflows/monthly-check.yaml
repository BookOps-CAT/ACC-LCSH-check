name: monthly lcsh check
on: 
  schedule: 
    - cron: '*/10 13-14 12 * *'
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_REPO: ${{ github.repository }}
  ASSIGNEES: charlottekostelic
jobs:
  monthly-run:
    name: Run monthly LCSH check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Get date var
        run: echo "DATE=$(date "+%Y%m%d-%H-%M")"  >> $GITHUB_ENV

      - name: Create branch, run script
        run: |
          git checkout -b monthly_check_$DATE
          python monthly_lcsh_check.py

      - name: Commit and push changed files
        run: |
          git config user.name "Charlotte Kostelic"
          git config user.email "charlottekostelic@bookops.org"
          git add lcsh.log
          git add data/*
          git commit -a -m "LCSH Check $DATE"
          git push --set-upstream origin monthly_check_$DATE

      - name: Parse output, create PR and Issue text
        run: |
          REVISED_LIST=$(grep "DEBUG - Revised" lcsh.log | grep -Eo "\[.+]$" || echo 'false')
          DEPRECATED_LIST=$(grep "DEBUG - Deprecated" lcsh.log | grep -Eo "\[.+]$" || echo 'false')
          {
            echo "PR_BODY<<EOF"
            echo "### Changed:"
            echo " + lcsh.log updated with data from workflow run on $(date '+%D')"
            echo "$(grep -q 'DEBUG' lcsh.log && echo '### Added:' && echo ' + New infile is: data/acc_in.csv' && echo ' + Old infile is: data/acc_in_${{ env.DATE }}' || echo '')"
            echo EOF
          } >> $GITHUB_ENV
          {
            echo "ISSUE_BODY<<EOF"
            echo "$(grep -q 'DEBUG - Revised' lcsh.log && echo '### Changed:' && '$REVISED_LIST' || '$(grep -q "DEBUG - Revised" lcsh.log)')"
            echo "$(grep -q 'DEBUG - Deprecated' lcsh.log && echo '### Deprecated:' && '$DEPRECATED_LIST' || '$(grep -q "DEBUG - Deprecated" lcsh.log)')"
            echo EOF
          } >> $GITHUB_ENV

      - name: Test ISSUE_BODY var
        if: ${{ env.REVISED_LIST != 'false' && env.DEPRECATED_LIST != 'false'}}
        run: |
          echo "${{ env.ISSUE_BODY}}"