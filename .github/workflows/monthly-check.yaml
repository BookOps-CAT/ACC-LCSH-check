name: monthly lcsh check
on:
  push: 
    branches:
      - github-actions
# on: 
#   schedule: 
#     - cron: '* 9 15 * *'
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_REPO: ${{ github.repository }}
  ASSIGNEES: charlottekostelic
jobs:
  monthly-run:
    name: Run monthly LCSH check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Create branch, run script
        run: |
          echo "DATE=$(date "+%Y%m%d-%H-%M-%S")"
          git checkout -b monthly_check_$DATE
          python monthly_lcsh_check.py

      - name: Commit and push changes
        run: |
          git config user.name "Charlotte Kostelic"
          git config user.email "charlottekostelic@bookops.org"
          git add lcsh.log add data/*
          git commit -a -m "LCSH Check $DATE"
          git push --set-upstream origin monthly_check_$DATE

      - name: Parse changes and set vars
        run: |
          echo "NEW_INFILE=$(git diff --quiet -- data/ && 'false' || 'true')" >> $GITHUB_ENV

      - name: Create PR text
        if: ${{ env.NEW_INFILE == 'false' }}
        run: |
          {
            echo "PR_BODY<<EOF"
            echo "### Changed:"
            echo " + lcsh.log updated with data from workflow run on $(date '+%D')"
            echo EOF
          } >> $GITHUB_ENV

      - name: Create PR and Issue text
        if: ${{ env.NEW_INFILE == 'true' }}
        run: |
          {
            echo "PR_BODY<<EOF"
            echo "${{ env.PR_BODY }}"
            echo "### Added:"
            echo " + New infile is: data/acc_in.csv"
            echo " + Old infile is: data/acc_in_$DATE"
            echo EOF
          } >> $GITHUB_ENV
          
          {
            echo "REVISED<<EOF"
            echo "### Changed:"
            echo "$(grep 'DEBUG - Revised' lcsh.log | grep -Eo '\[.+]$')"
            echo EOF
          } >> $GITHUB_ENV
          
          {
            echo "DEPRECATED<<EOF"
            echo "### Deprecated:"
            echo "$(grep 'DEBUG - Deprecated' lcsh.log | grep -Eo '\[.+]$')"
            echo EOF
          } >> $GITHUB_ENV
          
          {
            echo "ISSUE_BODY<<EOF"
            if [[ ${{ contains(env.REVISED, 'sh') == 'true' }} && echo '$REVISED' ]]
            if [[ ${{ contains(env.DEPRECATED, 'sh') == 'true' }} && echo '$DEPRECATED' }]]
            echo EOF
          } >> $GITHUB_ENV
      - name: Check PR and Issue text
        run: |
          echo "PR body text is: ${{ env.PR_BODY }}"
          echo "Issue body text is: ${{ env.ISSUE_BODY }}"
