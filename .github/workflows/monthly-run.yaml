name: monthly lcsh check
on:
  push: 
    branches:
      - testing
# on: 
#   schedule: 
#     - cron: '* 9 15 * *'
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_REPO: ${{ github.repository }}
  ASSIGNEES: charlottekostelic
jobs:
  monthly-run:
    name: Run monthly LCSH check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Create branch, run script
        run: |
          git checkout -b monthly_check_$(date "+%Y%m%d-%H-%M")
          python monthly_lcsh_check.py

      - name: Parse changes
        id: changes
        run: |
          echo "CHANGED=$(grep 'DEBUG - Revised' lcsh.log | grep -Eo '\[.+]$')" >> $GITHUB_OUTPUT
          echo "DEPRECATED=$(grep 'DEBUG - Deprecated' lcsh.log | grep -Eo '\[.+]$')" >> $GITHUB_OUTPUT
          
      - name: Create PR text
        id: pr_text
        run: |
          echo 'PR_ADDED << EOF'
          ### Added
          + New infile is: data/acc_in.csv
          + Old infile is: data/acc_in_$(date "+%Y%m%d").csv
          echo EOF
          
          echo 'PR_BODY << EOF'
          [[ ${{ toJSON(steps.changes.outputs) != '{ \"CHANGED\":\"\", \"DEPRECATED\":\"\" }' }} && $PR_ADDED ]]
          ### Changed
          + lcsh.log updated with data from workflow run on $(date "+%D")
          echo EOF >> $GITHUB_OUTPUT

      - name: Create Issue text
        id: issue_text
        if: ${{ toJSON(steps.changes.outputs) != '{ \"CHANGED\":\"\", \"DEPRECATED\":\"\" }' }}
        run: |
          echo 'ISSUE_CHANGED << EOF'
          ### Changed
          + ${{ steps.changes.outputs.CHANGED }}
          echo EOF

          echo 'ISSUE_DEPRECATED << EOF'
          ### Deprecated
          + ${{ steps.changes.outputs.DEPRECATED }}
          echo EOF

          echo 'ISSUE_BODY << EOF'
          [[ ! -z ${{ steps.changes.outputs.CHANGED }} && $ISSUE_CHANGED]];
          [[ ! -z ${{ steps.changes.outputs.DEPRECATED }} && $ISSUE_DEPRECATED]];
          echo EOF >> $GITHUB_OUTPUT
          

      - name: Commit and push changed files
        if: ${{ toJSON(steps.pr_text.outputs) != '{ \"PR_BODY\":\"\" }' }}
        run: |
          git config user.name "Charlotte Kostelic"
          git config user.email "charlottekostelic@bookops.org"
          git add lcsh.log
          git add data/*
          git commit -a -m "LCSH Check $(date "+%Y%m%d-%H-%M")"
          git push --set-upstream origin monthly_check_$(date "+%Y%m%d-%H-%M")

      - name: Create PR
        if: ${{ toJSON(steps.pr_text.outputs) != '{ \"PR_BODY\":\"\" }' }}
        run: |
          gh pr create \
            --repo ${{ github.repository }} \
            --assignee "$ASSIGNEES" \
            --title "Monthly LCSH check ($(date "+%Y%m%d-%H-%M"))" \
            --body "$PR_BODY")


      - name: Create Issue
        if: ${{ toJSON(steps.issue_text.outputs) != '{ \"ISSUE_BODY\":\"\" }' }}
        run: |
          gh issue create \
            --title "Changes to ACC LCSH ($(date "+%Y%m%d-%H-%M"))" \
            --assignee "$ASSIGNEES" \
            --body "$ISSUE_BODY")